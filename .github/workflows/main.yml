name: Main
on:
  push:
    branches:
      - main

jobs:
  # terraform-dev:
  #   permissions:
  #     id-token: write # Needed for GitHub OIDC
  #   runs-on: ubuntu-latest
  #   env:
  #     TF_PATH: "./terraform/environments/development"
  #     TF_VAR_source_email: ${{ secrets.TF_VAR_SOURCE_EMAIL }}
  #   if: "!contains(github.event.head_commit.message , 'ci skip')"
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         audience: sts.amazonaws.com
  #         aws-region: ${{ secrets.TF_VAR_aws_region }}
  #         role-to-assume: ${{ secrets.CI_AWS_ROLE_ARN }}

  #     - uses: hashicorp/setup-terraform@v3

  #     - name: Terraform fmt
  #       id: fmt
  #       run: terraform -chdir=$TF_PATH fmt -check
  #       continue-on-error: true

  #     - name: Terraform Init
  #       id: init
  #       run: terraform -chdir=$TF_PATH init

  #     - name: Terraform Validate
  #       id: validate
  #       run: terraform -chdir=$TF_PATH validate

  #     - name: Terraform Plan
  #       id: plan
  #       run: terraform -chdir=$TF_PATH plan

  #     - name: Terraform Apply
  #       id: apply
  #       run: terraform -chdir=$TF_PATH apply -auto-approve

  deploy-lambdas-dev:
    permissions:
      id-token: write # Needed for GitHub OIDC
    if: "!contains(github.event.head_commit.message , 'ci skip')"
    runs-on: ubuntu-latest
    # needs: [terraform-dev]
    strategy:
      matrix:
        lambda: [kleinanzeigen]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: eu-central-1
          role-to-assume: ${{ secrets.CI_AWS_ROLE_ARN }}

      - name: Install NPM
        run: npm ci

      - name: Test Lambda
        run: cd ./packages/${{matrix.lambda}} && npm run test

      - name: Build Lambda
        run: cd ./packages/${{matrix.lambda}} && npm run build

      - name: Zip Lambda
        run: zip -j ./packages/${{matrix.lambda}}.zip ./packages/${{matrix.lambda}}/dist/index.cjs

      - name: Deploy Lambda
        run: aws lambda update-function-code --function-name=price-watch-lambda-${{matrix.lambda}}-development --zip-file=fileb://packages/${{matrix.lambda}}.zip
